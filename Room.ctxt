#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @version\ 2016.02.29\r\n
comment1.params=name\ description\ dimensions
comment1.target=Room(java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=direction
comment10.target=Room\ getExit(java.lang.String)
comment10.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment11.params=direction
comment11.target=boolean\ hasExit(java.lang.String)
comment12.params=itemName
comment12.target=Item\ getItem(java.lang.String)
comment12.text=\r\n\ @param\ itemName\ the\ name\ of\ the\ item\r\n\ @return\ the\ item\ stored\ inside\ the\ room\ based\ on\ the\ item\ name.\ \r\n\ returns\ null\ if\ the\ item\ isn't\ in\ the\ room's\ item\ map\r\n
comment13.params=
comment13.target=java.lang.String\ getKey()
comment13.text=\r\n\ @return\ the\ name\ of\ the\ key\ opening\ the\ room\r\n
comment14.params=
comment14.target=java.lang.String\ getDimensions()
comment14.text=\r\n\ @return\ the\ dimensions\ of\ the\ room\ in\ '[width],[height]'\ format\r\n
comment15.params=itemName
comment15.target=boolean\ hasItem(java.lang.String)
comment15.text=\r\n\ \r\n\ @param\ itemName\ the\ name\ of\ the\ item\ checked\r\n\ @return\ whether\ the\ room\ contains\ a\ certain\ item\r\n
comment16.params=itemName
comment16.target=Item\ removeItem(java.lang.String)
comment16.text=\r\n\ remove\ the\ item\ from\ the\ room's\ item\ map\r\n\ @param\ itemName\r\n\ @return\ \r\n
comment17.params=
comment17.target=boolean\ isLocked()
comment17.text=\r\n\ @return\ whether\ the\ room\ is\ locked\ or\ not\r\n
comment18.params=newKey
comment18.target=void\ setKey(java.lang.String)
comment18.text=\r\n\ @param\ newKey\ sets\ the\ key\ locking\ the\ room\r\n
comment19.params=
comment19.target=void\ toggleLocked()
comment19.text=\r\n\ toggles\ whether\ the\ room\ is\ locked\ or\ not\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment20.params=
comment20.target=int\ getMemoriesRequired()
comment20.text=\r\n\ @return\ how\ many\ memory\ points\ are\ needed\ to\ enter\ the\ room\r\n
comment21.params=newMemoryScore
comment21.target=void\ setMemoriesRequired(int)
comment21.text=\r\n\ @param\ newMemoryScore\ sets\ the\ memories\ required\ to\ enter\ the\ room\r\n
comment22.params=end
comment22.target=void\ setEnd(java.lang.String)
comment22.text=\r\n\ @param\ end\ sets\ the\ end\ string\ that\ identifies\ the\ respective\ end\ upon\ entering\ the\ room\r\n
comment23.params=
comment23.target=java.lang.String\ getEnd()
comment23.text=\r\n\ @return\ the\ name\ of\ the\ end\ triggered\ upon\ entering\ the\ room\r\n
comment24.params=
comment24.target=boolean\ hasEnd()
comment24.text=\r\n\ @return\ whether\ the\ room\ has\ an\ end\ or\ not\r\n
comment25.params=person
comment25.target=void\ setNoInvestigatePerson(java.lang.String)
comment25.text=\r\n\ @param\ person\ sets\ the\ person\ name\ that\ doesn't\ allow\ an\ investigation\ within\ the\ room\r\n
comment26.params=
comment26.target=java.lang.String\ getNoInvestigatePerson()
comment26.text=\r\n\ @return\ the\ name\ of\ the\ person\ that\ doesn't\ allow\ an\ investigation\ within\ the\ room\r\n
comment27.params=checkPosition
comment27.target=boolean\ checkSamePosition(java.lang.String)
comment27.text=\r\n\ Checks\ if\ the\ given\ position\ is\ the\ same\ as\ the\ position\ of\ an\ item\r\n\ @param\ position\ the\ position\ to\ be\ checked\r\n\ @return\ whether\ the\ position\ is\ in\ the\ same\ position\ of\ an\ item\r\n
comment28.params=
comment28.target=java.util.ArrayList\ getPositions()
comment29.params=mapSymbol\ newPosition
comment29.target=boolean\ addToPositions(java.lang.String,\ java.lang.String)
comment3.params=itemName\ item
comment3.target=void\ setItem(java.lang.String,\ Item)
comment3.text=\r\n\ Define\ an\ item\ in\ this\ room.\r\n\ @param\ itemName\ The\ name\ of\ the\ item\ (e.g\ television).\r\n\ @param\ item\ The\ actual\ item\ in\ the\ room.\ \ \r\n
comment30.params=position
comment30.target=void\ removePosition(java.lang.String)
comment4.params=itemName\ item\ isLoading
comment4.target=void\ setItem(java.lang.String,\ Item,\ boolean)
comment4.text=\r\n\ Define\ an\ item\ in\ this\ room,\ overrides\ the\ other\ method\ when\ loading\ in\ the\ data\ from\ the\r\n\ data.xml\ file.\r\n\ @param\ itemName\ The\ name\ of\ the\ item\r\n\ @param\ item\ The\ actual\ item\ in\ the\ room\r\n\ @param\ isStarting\ whether\ the\ game\ is\ loading\ in\ the\ data\ from\ the\ data.xml\ file\ \r\n\ (used\ to\ override\ the\ method\ above)\r\n
comment5.params=
comment5.target=java.lang.String\ getShortDescription()
comment5.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment6.params=
comment6.target=java.lang.String\ getName()
comment6.text=\r\n\ @return\ the\ name\ of\ the\ room\r\n
comment7.params=
comment7.target=java.lang.String\ getLongDescription()
comment7.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment8.params=
comment8.target=java.lang.String\ getExitString()
comment8.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment9.params=
comment9.target=java.lang.String\ getItemsString()
comment9.text=\r\n\ @return\ the\ string\ containing\ the\ list\ of\ the\ items\ inside\ the\ room\r\n
numComments=31
