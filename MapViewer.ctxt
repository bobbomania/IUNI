#BlueJ class context
comment0.target=MapViewer
comment0.text=\r\n\ This\ class\ handles\ the\ display\ of\ the\ room's\ map\ on\ the\ terminal\ via\ ASCII\ art.\r\n\ \r\n\ @author\ Gabriele\ Trotta\ (K21006956)\r\n\ date\ \:\ 26/11/21\r\n
comment1.params=room
comment1.target=MapViewer(Room)
comment1.text=\r\n\ creates\ the\ MapViewer\ object\ that\ will\ be\ able\ to\ create\ the\ room's\ ASCII\ map\r\n\ @param\ room\ the\ room\ that\ is\ being\ made\ the\ map\r\n\ @param\ positions\ the\ positions\ of\ the\ npc's\ that\ stand\ within\ the\ room\r\n
comment10.params=
comment10.target=void\ displayMap()
comment10.text=\r\n\ prints\ out\ the\ map\ of\ the\ room\ to\ the\ terminal\r\n
comment2.params=string
comment2.target=int\ getFirst(java.lang.String)
comment2.text=\r\n\ gets\ the\ element\ 'a'\ in\ the\ string\ 'a,b'\r\n\ @param\ string\ the\ string\ that\ is\ being\ analyzed\r\n\ @return\ the\ first\ element\ of\ the\ string\ being\ split\r\n
comment3.params=string
comment3.target=int\ getSecond(java.lang.String)
comment3.text=\ \r\n\ gets\ the\ element\ 'b'\ in\ the\ string\ 'a,b'\r\n\ @param\ string\ the\ string\ that\ is\ being\ analyzed\r\n\ @return\ the\ second\ element\ of\ the\ string\ being\ split\r\n
comment4.params=
comment4.target=void\ createMap()
comment4.text=\r\n\ creates\ a\ map\ of\ the\ room\ being\ displayed\r\n
comment5.params=roomName
comment5.target=void\ showRoomName(java.lang.String)
comment5.text=\r\n\ handles\ the\ showing\ of\ the\ room\ name\ in\ the\ middle\ of\ the\ map\r\n\ @param\ roomName\ the\ name\ of\ the\ room\ being\ displayed\r\n
comment6.params=rowIndex\ colIndex\ length
comment6.target=boolean\ isInForbiddenRange(int,\ int,\ int)
comment6.text=\r\n\ checks\ if\ a\ coordinate\ (colIndex,\ rowIndex)\ is\ inside\ the\ room-name's\ box\r\n\ @param\ rowIndex\ the\ row\ position\ of\ the\ first\ character\ text\ being\ checked\r\n\ @param\ colIndex\ the\ column\ position\ of\ the\ first\ character\ text\ being\ checked\r\n\ @param\ length\ the\ length\ of\ the\ word\r\n\ @return\ whether\ the\ word\ is\ inside\ the\ box\ or\ not\r\n
comment7.params=exit\ rowIndex
comment7.target=void\ createHorizontalWall(java.lang.String,\ int)
comment7.text=\r\n\ creates\ a\ straight\ horizontal\ 'wall'\ of\ underscores\ at\ the\ specified\ row\ index,\r\n\ with\ the\ specified\ exit\ in\ the\ middle\r\n\ @param\ exit\ the\ name\ of\ the\ exit\ in\ the\ middle\ of\ the\ wall\r\n\ @param\ rowIndex\ the\ index\ where\ the\ wall\ is\ placed\r\n
comment8.params=exit\ colIndex
comment8.target=void\ createVerticalWall(java.lang.String,\ int)
comment8.text=\r\n\ creates\ a\ straight\ vertical\ 'wall'\ of\ '|'\ at\ the\ specified\ column\ index,\r\n\ with\ the\ specified\ exit\ in\ the\ middle\r\n\ @param\ exit\ the\ name\ of\ the\ exit\ in\ the\ middle\ of\ the\ wall\r\n\ @param\ colIndex\ the\ index\ where\ the\ wall\ is\ placed\r\n
comment9.params=text\ rowIndex\ colIndex\ isName
comment9.target=void\ showText(java.lang.String,\ int,\ int,\ boolean)
comment9.text=\r\n\ Shows\ the\ specified\ text\ horizontally\ at\ the\ specified\ coordinate\ (colIndex,\ rowIndex)\r\n\ Cuts\ the\ word\ out\ if\ it's\ too\ long\ for\ the\ room\ map.\r\n\ \r\n\ @param\ text\ the\ text\ that\ is\ shown\ on\ the\ map\r\n\ @param\ rowIndex\ the\ row\ number\ where\ the\ text\ starts\r\n\ @param\ colIndex\ the\ column\ number\ where\ the\ text\ starts\r\n\ @param\ isName\ whether\ the\ text\ is\ part\ of\ the\ name\ box\ creation\r\n
numComments=11
