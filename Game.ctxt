#BlueJ class context
comment0.target=Game
comment0.text=\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ In\ this\ project\ we\ abbreviate\ Non-Playable-Character\ as\ NPC\ or\ npc\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\ and\ Gabriele\ Trotta\ (K21006956)\r\n\ @version\ 2016.02.29\r\n
comment1.params=item\ parameters
comment1.target=void\ performAction(Item,\ java.lang.String)
comment1.text=\r\n\ The\ function\ to\ be\ defined\ that\ performs\ an\ action\ for\ the\ specified\ item\r\n\ @param\ item\ the\ item\ we're\ using\r\n
comment10.params=command
comment10.target=void\ interactItem(Command)
comment10.text=\r\n\ Interact\ with\ an\ item,\ so\ it\ prints\ out\ the\ item's\ action\r\n\ @param\ command\ the\ player's\ command\r\n
comment11.params=
comment11.target=void\ goBack()
comment11.text=\r\n\ Sets\ the\ player's\ current\ room\ to\ the\ previous\ room\ visited\ by\ them\r\n
comment12.params=command
comment12.target=void\ getItem(Command)
comment12.text=\r\n\ Get\ the\ item\ specified\ in\ the\ command\ from\ the\ room,\ \r\n\ only\ when\ it\ can\ be\ held\ and\ if\ your\ inventory\ isn't\ too\ heavy.\r\n\ @param\ command\ the\ command\ given\ by\ the\ player\r\n
comment13.params=command
comment13.target=void\ dropItem(Command)
comment13.text=\r\n\ Drop\ the\ item\ specified\ in\ the\ command,\ from\ your\ inventory\r\n\ inside\ the\ room\ you're\ currently\ standing\ in\r\n\ @param\ command\ the\ command\ given\ by\ the\ player\r\n
comment14.params=command
comment14.target=void\ inspectItem(Command)
comment14.text=\r\n\ Gets\ the\ description\ of\ the\ item\ specified\ by\ the\ command.\r\n\ Can\ also\ inspect\ the\ inventory\ to\ see\ its\ contents\r\n\ \r\n\ @param\ command\ the\ command\ given\ by\ the\ player\r\n
comment15.params=
comment15.target=void\ investigateRoom()
comment15.text=\r\n\ The\ player\ looks\ around\ the\ room\ to\ look\ for\ npcs\ and\ items\r\n\ The\ player\ isn't\ allowed\ to\ look\ for\ items\ if\ its\ considered\ 'rude'\ by\ an\ npc\r\n\ that\ is\ inside\ the\ room\r\n
comment16.params=
comment16.target=void\ showItems()
comment16.text=\r\n\ Show\ the\ list\ of\ the\ items\ inside\ the\ room\r\n
comment17.params=
comment17.target=void\ showNpcs()
comment17.text=\r\n\ Shows\ the\ list\ of\ npc's\ inside\ the\ room\r\n
comment18.params=command
comment18.target=boolean\ talkToNpc(Command)
comment18.text=\r\n\ Talk\ to\ the\ npc\ specified\ inside\ the\ command\r\n\ @param\ command\ the\ command\ specified\ by\ the\ user\r\n\ @return\ return\ whether\ or\ not\ the\ user\ wants\ to\ leave\ the\ game\r\n
comment19.params=npc
comment19.target=void\ processInteraction(NPC)
comment19.text=\r\n\ This\ function\ handles\ the\ modification\ of\ the\ NPC,\ Room\ and\ Player\ objects\r\n\ in\ response\ to\ an\ interaction.\ (e.g\ an\ item\ has\ been\ transferred\ from\ npc\ to\ player)\r\n\ @param\ npc\ the\ npc\ involved\ in\ the\ interaction\r\n
comment2.params=
comment2.target=Game()
comment2.text=\r\n\ Create\ the\ game,\ load\ in\ all\ the\ game\ data\ from\ the\ data.xml\ file\ and\ initialize\ room\ map.\r\n
comment20.params=command
comment20.target=boolean\ giveItem(Command)
comment20.text=\r\n\ Gives\ the\ item\ specified\ by\ the\ command\ to\ the\ npc\ specified\ by\ the\ command.\r\n\ If\ it\ gives\ an\ item\ to\ an\ npc\ that\ needs\ it,\ a\ dialogue\ will\ start.\r\n\ Otherwise,\ the\ npc\ will\ reject\ the\ item\r\n\ @param\ command\ the\ command\ specified\ by\ the\ user\r\n\ @return\ whether\ the\ user\ wants\ to\ leave\ the\ game\ or\ not\r\n
comment21.params=
comment21.target=void\ showMap()
comment21.text=\r\n\ Shows\ the\ room\ map\ of\ the\ current\ room\ on\ the\ terminal\r\n
comment22.params=command
comment22.target=boolean\ quit(Command)
comment22.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment3.params=
comment3.target=void\ initializeItemActions()
comment3.text=\r\n\ This\ function\ initializes\ all\ the\ functions\ that\ define\ actions\ that\ items\ can\ perform\r\n
comment4.params=item\ parameters
comment4.target=void\ performAction(Item,\ java.lang.String)
comment5.params=
comment5.target=void\ play()
comment5.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment6.params=
comment6.target=void\ printWelcome()
comment6.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player,\ and\ shows\ the\ current\ room's\ map\r\n
comment7.params=command
comment7.target=boolean\ processCommand(Command)
comment7.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment8.params=command
comment8.target=void\ printHelp(Command)
comment8.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ a\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment9.params=command
comment9.target=void\ goRoom(Command)
comment9.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
numComments=23
