#BlueJ class context
comment0.target=DialogManager
comment0.text=\ \r\n\ This\ class\ parses\ the\ dialog.xml\ file\ to\ get\ out\ the\ corresponding\ interaction\ with\ the\ player.\r\n\ Two\ files\ are\ used\ so\ that\ one\ of\ them,\ dialog.xml\ can\ be\ modified\ to\ keep\ track\ of\ the\ player's\ interactions\r\n\ with\ the\ NPCs.\r\n\r\n\ @author\ Gabriele\ Trotta\ (K21006956)\r\n\ @version\ 17/11/21\r\n
comment1.params=npc\ parameterName
comment1.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment1.text=\r\n\ This\ function\ checks\ a\ Condition\ specified\ in\ the\ DialogManager.java\ to\ test\ if\ a\ dialog\ should\ happen\r\n\ or\ not.\r\n\ @param\ npc\ the\ npc\ with\ which\ the\ player\ is\ interacting\ with\r\n\ @param\ parameterName\ the\ name\ of\ a\ supplementary\ parameter\ needed\ to\ determine\ if\ the\ condition\ \r\n\ has\ been\ satisfied\r\n\ @return\ whether\ the\ condition\ has\ been\ satisfied\ or\ not\r\n
comment10.params=npc\ memories
comment10.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment11.params=npc\ roomName
comment11.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment12.params=npc\ endName
comment12.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment13.params=npc\ itemName
comment13.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment14.params=npc\ itemName
comment14.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment15.params=itemKey
comment15.target=Item\ popItemTraded(java.lang.String)
comment15.text=\r\n\ Remove\ and\ return\ the\ item\ traded,\ according\ to\ its\ item\ key\r\n\ @param\ itemKey\ the\ key\ identifying\ the\ item\ traded\ to\ be\ 'popped'\r\n\ @return\ the\ item\ traded\r\n
comment16.params=
comment16.target=boolean\ hasItemTraded()
comment16.text=\r\n\ @return\ whether\ or\ not\ there\ is\ an\ item\ traded\ by\ the\ npc\r\n
comment17.params=
comment17.target=java.lang.String\ getNameOfItemTraded()
comment17.text=\r\n\ @return\ the\ name\ of\ any\ item\ traded\ by\ the\ npc\r\n\ return\ ""\ if\ none\ are\ left\r\n
comment18.params=
comment18.target=int\ getMemories()
comment18.text=\r\n\ @return\ the\ memory\ points\ gained\ by\ this\ dialog\r\n
comment19.params=
comment19.target=void\ isNotCorrupt()
comment19.text=\r\n\ changes\ the\ <allDialog>\ attribute\ "isCorrupt"\ to\ false,\ thus\ dialog.xml\ has\ not\ been\ reset\r\n
comment2.params=npc
comment2.target=DialogManager(NPC)
comment2.text=\r\n\ Constructor\ for\ the\ DialogManager\ that\ loads\ in\ the\ document\ dialog.xml\ and\ that\ initializes\ all\r\n\ of\ the\ functions\ that\ determine\ the\ value\ of\ a\ condition\ function.\r\n\ \r\n\ @param\ npc\ the\ npc\ with\ which\ the\ player\ is\ interacting\ with\r\n
comment20.params=
comment20.target=boolean\ hasEnd()
comment20.text=\r\n\ @return\ whether\ the\ dialog\ yields\ an\ end\ to\ the\ game\r\n
comment21.params=
comment21.target=java.lang.String\ getEnd()
comment21.text=\r\n\ @return\ the\ end\ found\ after\ the\ dialog\r\n
comment22.params=specialCondition
comment22.target=boolean\ canDoSpecialCondition(java.lang.String)
comment22.text=\r\n\ Checks\ whether\ the\ npc\ satisfies\ the\ special\ condition\ identified\ by\ the\ string\ "specialCondition"\r\n\ @param\ specialCondition\ the\ string\ that\ identifies\ the\ special\ condition\r\n\ @return\ whether\ the\ npc\ can\ satisfy\ the\ special\ condition\r\n
comment23.params=
comment23.target=boolean\ startConversation()
comment23.text=\r\n\ This\ function\ starts\ the\ conversation\ between\ the\ player\ and\ NPC.\r\n\ \r\n\ @return\ whether\ the\ player\ wants\ to\ quit\ the\ game\ or\ not\r\n
comment24.params=messageSource
comment24.target=void\ printMessages(org.w3c.dom.Element)
comment24.text=\r\n\ This\ function\ prints\ the\ content\ of\ various\ consecutive\ <messages>\ nodes\ in\ the\ dialog.xml\ file\r\n\ @param\ messageSource\ the\ parent\ element\ of\ all\ the\ <messages>\ sibling\ element\ nodes.\r\n\ code\ from\ \:\ https\://stackoverflow.com/questions/17641496/how-can-i-get-the-siblings-of-an-xml-element-in-java-using-the-dom-parser\r\n\ was\ used\ to\ iterate\ the\ sibling\ element\ nodes.\r\n
comment25.params=interaction\ isRepeatableString
comment25.target=void\ modifyInteractionRepeatability(org.w3c.dom.Element,\ java.lang.String)
comment25.text=\r\n\ This\ function\ modifies\ the\ totalRepetitions\ attribute\ in\ an\ interaction\ by\ decreasing\ it\ by\ 1\r\n\ as\ one\ repetition\ of\ the\ action\ has\ been\ performed.\ \r\n\ \r\n\ @param\ interaction\ the\ iteraction\ whose\ attribute\ is\ being\ modified\r\n\ @param\ isRepeatableString\ the\ text\ value\ of\ the\ totalRepetitions\ attribute\r\n
comment26.params=string\ match
comment26.target=boolean\ multipleStringEquals(java.lang.String,\ java.lang.String)
comment26.text=\r\n\ This\ function\ checks\ if\ a\ match\ string\ is\ present\ in\ a\ string\ composed\ of\ words\r\n\ separated\ with\ "/"\ (e.g.\ \:\ "yes/yeah")\r\n\ @param\ string\ the\ string\ containing\ the\ different\ words\r\n\ @param\ match\ the\ word\ to\ be\ matched\ with\ the\ different\ words\ in\ string\ \r\n\ @return\ whether\ match\ appears\ in\ the\ list\ of\ words\ from\ string\r\n
comment27.params=interactionNodes\ depth\ conditionSatisfied
comment27.target=void\ exploreDialogTree(org.w3c.dom.Element,\ int,\ boolean)
comment27.text=\r\n\ This\ function\ explores\ the\ element\ nodes\ of\ the\ <dialog>\ tree\ of\ the\ respective\ NPC,\r\n\ so\ as\ to\ print\ out\ the\ various\ responses\ depending\ on\ conditions\ of\ the\ player's\ location,\r\n\ the\ npc's\ inventory,\ player's\ responses\ to\ the\ NPC's\ questions\ or\ even\ if\ an\ interaction\ happened\ \r\n\ already\ or\ not.\r\n\ \r\n\ @param\ interactionNodes\ all\ of\ the\ element\ nodes\ of\ the\ possible\ interactions\ of\ an\ NPC\ with\ the\ player\r\n\ @param\ depth\ the\ depth\ of\ recursion\ of\ the\ function\r\n\ @param\ conditionSatisfied\ whether\ or\ not\ the\ condition\ attribute\ of\ the\ <interaction>\ has\ been\ \r\n\ satisfied\ already\ \r\n
comment3.params=
comment3.target=DialogManager()
comment3.text=\r\n\ This\ constructor\ is\ called\ when\ no\ npc\ is\ involved\ in\ the\ dialog,\ so\ only\ at\ the\ end\ of\ the\ program.\r\n\ We\ then\ restore\ the\ dialog.xml\ content\ to\ the\ unchanged\ format\ in\ CONST_DIALOG.xml\r\n
comment4.params=
comment4.target=void\ instantiateConditions()
comment4.text=\r\n\ This\ function\ assigns\ a\ condition\ function\ for\ a\ specific\ key,\ these\ are\ later\ used\ to\r\n\ see\ if\ the\ dialog\ should\ occur\ or\ not.\r\n
comment5.params=npc\ itemName
comment5.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment6.params=npc\ itemName
comment6.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment7.params=npc\ itemName
comment7.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment8.params=npc\ itemName
comment8.target=boolean\ checkCondition(NPC,\ java.lang.String)
comment9.params=npc\ itemName
comment9.target=boolean\ checkCondition(NPC,\ java.lang.String)
numComments=28
